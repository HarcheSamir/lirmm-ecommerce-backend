const express = require('express');
const {
    getOrCreateCart, // For POST / or GET /:cartId (if cartId can be created)
    getCartById,
    addItemToCart,
    updateItemInCart,
    removeItemFromCart,
    clearCart,
    deleteCart
} = require('./cart.controller');

const router = express.Router();

// Route to get or create a cart.
// If POSTing to `/`, a new cartId is generated.
// If GETting `/:cartId`, it tries to retrieve, or creates if not found (current logic).
// It might be clearer to have POST / for new cart, and GET /:cartId strictly for retrieval.
// Let's use: POST / to create a brand new cart (cartId generated by server).
// And keep GET /:cartId to retrieve a cart, or create it if that ID is not found.

// Create a new cart (server generates cartId)
// Or, allow client to suggest a cartId (e.g., from local storage if guest promotes to server)
router.post('/', getOrCreateCart); // `getOrCreateCart` handles generation if no ID is present.

// Get a cart by ID (creates if not found with this specific ID)
router.get('/:cartId', getCartById);

// Add an item to a specific cart
router.post('/:cartId/items', addItemToCart);

// Update an item's quantity in a specific cart
router.put('/:cartId/items/:itemId', updateItemInCart);

// Remove an item from a specific cart
router.delete('/:cartId/items/:itemId', removeItemFromCart);

// Clear all items from a specific cart
router.delete('/:cartId/items', clearCart); // Using DELETE on /items to clear

// Delete an entire cart (optional)
router.delete('/:cartId', deleteCart);


module.exports = router;
