kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  # Kafka (External Listener, NodePort 30902 from kafka-svc)
  - containerPort: 30902
    hostPort: 39092
    protocol: TCP
  # Elasticsearch API (NodePort 32200 from elasticsearch-svc)
  - containerPort: 32200
    hostPort: 19200
    protocol: TCP
  # Consul UI/API (NodePort 32500 from consul-svc)
  - containerPort: 32500
    hostPort: 18500
    protocol: TCP
  # Redis (NodePort 32379 from redis-svc) # <-- ADDED Redis port mapping
  - containerPort: 32379
    hostPort: 19379 # Different host port to avoid clash if local Redis runs on 6379
    protocol: TCP
  # API Gateway (NodePort 30000 from api-gateway-svc)
  - containerPort: 30000
    hostPort: 13000
    protocol: TCP
  # Auth Service (NodePort 30001 from auth-service-svc)
  - containerPort: 30001
    hostPort: 13001
    protocol: TCP
  # Product Service (NodePort 30003 from product-service-svc)
  - containerPort: 30003
    hostPort: 13003
    protocol: TCP
  # Image Service (NodePort 30004 from image-service-svc)
  - containerPort: 30004
    hostPort: 13004
    protocol: TCP
  # Search Service (NodePort 30005 from search-service-svc)
  - containerPort: 30005
    hostPort: 13005
    protocol: TCP
  # Cart Service (NodePort 30006 from cart-service-svc) # <-- ADDED Cart Service port mapping
  - containerPort: 30006
    hostPort: 13006
    protocol: TCP
  # Auth DB (PostgreSQL, NodePort 30434 from auth-db-svc)
  - containerPort: 30434
    hostPort: 15434
    protocol: TCP
  # Product DB (PostgreSQL, NodePort 30435 from product-db-svc)
  - containerPort: 30435
    hostPort: 15435
    protocol: TCP
