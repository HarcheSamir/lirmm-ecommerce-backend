// Pipeline to set up the Kubernetes cluster, Istio, and all backing infrastructure services.
// This version is self-contained and does not require UI configuration.
pipeline {
    agent { label 'wsl' }

    environment {
        // THIS IS THE FIX, PART 1: Define the location of the istioctl binary's directory.
        // This is now version-controlled and explicit.
        ISTIO_BIN_DIR         = '/home/samir/istio-1.26.3/bin'

        APP_NAMESPACE       = 'lirmm-services'
        INFRA_MANIFEST_FILE = './kind-deployment/infra-manifests.yaml'
    }

    stages {
        stage('Setup Kind Cluster and Istio') {
            steps {
                // THIS IS THE FIX, PART 2: Temporarily add the defined directory to the PATH.
                withEnv(["PATH+EXTRA=${env.ISTIO_BIN_DIR}"]) {
                    script {
                        echo "--- Running the main setup script with modified PATH ---"
                        sh "chmod +x ./kind-deployment/setup-kind.sh"
                        sh "./kind-deployment/setup-kind.sh"
                    }
                }
            }
        }
        stage('Deploy Infrastructure Services') {
            steps {
                script {
                    echo "--- Ensuring namespace '${env.APP_NAMESPACE}' exists ---"
                    sh "kubectl create namespace ${env.APP_NAMESPACE} --dry-run=client -o yaml | kubectl apply -f -"

                    echo "--- Applying infrastructure manifests (DBs, Kafka, etc.) ---"
                    sh "kubectl apply -f ${env.INFRA_MANIFEST_FILE} -n ${env.APP_NAMESPACE}"

                    echo "--- Waiting for all infrastructure deployments to become available ---"
                    sh "kubectl wait --for=condition=Available --all deployments -n ${env.APP_NAMESPACE} --timeout=15m"
                }
            }
        }
    }
    post {
        success {
            echo "--- INFRASTRUCTURE DEPLOYMENT SUCCEEDED ---"
            echo "The cluster is ready for the application deployment pipeline."
        }
    }
}